<?xml version="1.0" encoding="UTF-8"?>

<!--
========================================================================================================================
beans-security.xml

Copyright (c) 2013 Manning Publications Co.

Willie Wheeler (willie.wheeler@gmail.com)

Book: http://manning.com/wheeler/
Blog: http://springinpractice.com/
Code: https://github.com/springinpractice
========================================================================================================================
-->
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.0.xsd">
		
	<http auto-config="true" use-expressions="true">
		<form-login login-page="/login.html"
			authentication-failure-url="/login.html?failed=true"
			default-target-url="/home.html" />
		<remember-me />
		<logout logout-success-url="/home.html" />
	</http>
	
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<beans:constructor-arg value="256" />
	</beans:bean>

	<!-- Better to generate a large, random salt (stored as plaintext with the user account) to make dictionary attacks
	     harder, but this works for modest security needs. At least we are using a variable salt, which still prevents
	     attackers from using a single rainbow table to attack the passwords. -->
	<beans:bean id="saltSource"
		class="org.springframework.security.authentication.dao.ReflectionSaltSource"
		p:userPropertyToUse="id" />
		
	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder ref="passwordEncoder">
				<salt-source ref="saltSource" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>
</beans:beans>
